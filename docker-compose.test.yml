version: '3.9'

services:
  redis:
    image: redis:7.0.11
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
    ports:
      - 6379:6379

  rabbitmq:
    image: rabbitmq:3
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s

  neo4j:
    image: neo4j:5.9.0
    restart: unless-stopped
    environment:
      - NEO4J_server.memory.heap.initial_size=1G
      - NEO4J_server.memory.heap.max_size=2G
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_AUTH=neo4j/password
    healthcheck:
      test: ["CMD" ,"wget", "http://localhost:7474"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - 7687:7687

  discourse:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    command: yarn run test:cov
    ports:
      - 3000:3000
    volumes:
      - ./coverage:/project/coverage
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      neo4j:
        condition: service_healthy